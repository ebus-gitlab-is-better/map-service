// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"map-service/internal/biz"
	"map-service/internal/conf"
	"map-service/internal/data"
	"map-service/internal/server"
	"map-service/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	goCloak := data.NewKeycloak(confData)
	keycloakAPI := data.NewKeyCloakAPI(confData, goCloak, logger)
	client := data.NewValhallaClient(confData)
	accidentClient := data.NewAccidentService(confData)
	mapUseCase := biz.NewMapUseCase(client, accidentClient)
	httpServer := server.NewHTTPServer(confServer, keycloakAPI, mapUseCase, logger)
	mapService := service.NewMapService(mapUseCase)
	grpcServer := server.NewGRPCServer(confServer, mapService, logger)
	app := newApp(logger, httpServer, grpcServer)
	return app, func() {
	}, nil
}
